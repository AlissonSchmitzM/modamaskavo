require_relative '../node_modules/react-native/scripts/react_native_pods'

platform :ios, '17.0'
use_frameworks! :linkage => :static
use_modular_headers!

require 'pathname'

# üõ† Corrige build_type para libs espec√≠ficas
pre_install do |installer|
  installer.pod_targets.each do |pod|
    if ['GTMAppAuth', 'GoogleUtilities'].include?(pod.name)
      def pod.build_type;
        Pod::BuildType.static_library
      end
    end
  end
end

# ü©π Corrige a vers√£o do GTMAppAuth usada pelo Google SignIn
post_install do |installer|
  rn_google_signin_spec = Pathname.new(__dir__) + '../node_modules/@react-native-google-signin/google-signin/RNGoogleSignin.podspec'
  if rn_google_signin_spec.exist?
    content = rn_google_signin_spec.read
    if content.include?("s.dependency 'GTMAppAuth', '~> 1.1.0'")
      content = content.gsub("s.dependency 'GTMAppAuth', '~> 1.1.0'", "s.dependency 'GTMAppAuth', '>= 4.1.1'")
      rn_google_signin_spec.write(content)
    end
  end

  installer.pods_project.targets.each do |target|
    # Ajustes espec√≠ficos para DoubleConversion
    if target.name == 'DoubleConversion' || target.name.include?('React-')
      target.build_configurations.each do |config|
        config.build_settings['HEADER_SEARCH_PATHS'] = [
          '$(inherited)',
          '"$(PODS_ROOT)/DoubleConversion"',
          '"$(PODS_ROOT)/Headers/Public/DoubleConversion"',
          '"$(PODS_ROOT)/boost"',
          '"$(PODS_ROOT)/RCT-Folly"',
          '"$(PODS_ROOT)/fmt/include"'
        ].join(' ')
        
        config.build_settings['CLANG_CXX_LANGUAGE_STANDARD'] = 'gnu++20'
        config.build_settings['CLANG_CXX_LIBRARY'] = 'libc++'
      end
    end

    # Configura√ß√µes para todos os m√≥dulos Firebase
    if target.name.start_with?('Firebase')
      target.build_configurations.each do |config|
        config.build_settings['DEFINES_MODULE'] = 'YES'
        config.build_settings['CLANG_ENABLE_MODULES'] = 'YES'
        config.build_settings['OTHER_CFLAGS'] = '$(inherited) -DFIREBASE_BUILD_CORE_INTERNAL'
      end
    end

    # Configura√ß√£o espec√≠fica para FirebaseCoreInternal
    if target.name == 'FirebaseCoreInternal'
      target.build_configurations.each do |config|
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] = '$(inherited) FIRBUILD_CORE_INTERNAL=1'
        config.build_settings['HEADER_SEARCH_PATHS'] = [
          '$(inherited)',
          '"$(PODS_ROOT)/FirebaseCoreInternal/Sources"',
          '"$(PODS_ROOT)/Headers/Public/FirebaseCoreInternal"'
        ].join(' ')
      end
    end
	
	if target.name == 'Yoga'
		phase = target.build_phases.find { |p| p.display_name == 'Copy Headers' }
		if phase
		  phase.files.delete_if do |file|
			file.file_ref.path.include?('yoga/enums/Align.h') ||
			file.file_ref.path.include?('yoga/enums/FlexDirection.h')
		  end
		end
	  end

    # Configura√ß√µes globais para todos os targets
    target.build_configurations.each do |config|
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '17.0'
      config.build_settings['EXCLUDED_ARCHS[sdk=iphonesimulator*]'] = 'arm64'
      config.build_settings['ALWAYS_SEARCH_USER_PATHS'] = 'NO'
      config.build_settings['CLANG_CXX_LANGUAGE_STANDARD'] = 'gnu++20'
      config.build_settings['CLANG_CXX_LIBRARY'] = 'libc++'
      config.build_settings['GCC_C_LANGUAGE_STANDARD'] = 'gnu11'
      config.build_settings['CLANG_ALLOW_NON_MODULAR_INCLUDES_IN_FRAMEWORK_MODULES'] = 'YES'
      config.build_settings['OTHER_CFLAGS'] ||= ['$(inherited)']
      config.build_settings['OTHER_CFLAGS'] << '-DFIREBASE_BUILD_CORE_INTERNAL'
    end
  end

  installer.pods_project.build_configurations.each do |config|
    config.build_settings['CLANG_CXX_LANGUAGE_STANDARD'] = 'c++17'
    config.build_settings['CLANG_CXX_LIBRARY'] = 'libc++'
    config.build_settings['GCC_C_LANGUAGE_STANDARD'] = 'c11'
    config.build_settings['CLANG_ALLOW_NON_MODULAR_INCLUDES_IN_FRAMEWORK_MODULES'] = 'YES'
  end

  # üîÅ REMOVE arquivos duplicados do React-Codegen
  codegen_target = installer.pods_project.targets.find { |t| t.name == 'React-Codegen' }
  if codegen_target
    phase = codegen_target.build_phases.find { |p| p.display_name == 'Compile Sources' }
    if phase
      phase.files.each do |file|
        if file.file_ref.path.include?("States.cpp")
          phase.remove_file_reference(file.file_ref)
        end
      end
    end
  end
end

$FirebaseSDKVersion = '10.24.0'

target 'modamaskavo' do
  config = use_native_modules!

  use_react_native!(
    :path => config[:reactNativePath],
    :hermes_enabled => false,
    :fabric_enabled => false
  )

  # Depend√™ncias manuais
  pod 'RNSVG', :path => '../node_modules/react-native-svg'
  pod 'RNScreens', :path => '../node_modules/react-native-screens'

  # Firebase - Configura√ß√£o especial para v22.1.0
  pod 'Firebase', $FirebaseSDKVersion
  pod 'FirebaseCore', $FirebaseSDKVersion
  pod 'FirebaseCoreInternal', $FirebaseSDKVersion do |s|
    s.source_files = 'FirebaseCoreInternal/Sources/**/*.{h,m}'
    s.pod_target_xcconfig = {
      'DEFINES_MODULE' => 'YES',
      'OTHER_CFLAGS' => '-DFIREBASE_BUILD_CORE_INTERNAL'
    }
  end
  pod 'FirebaseAuth', $FirebaseSDKVersion
  pod 'FirebaseDatabase', $FirebaseSDKVersion
  pod 'FirebaseStorage', $FirebaseSDKVersion
  pod 'FirebaseInstallations', $FirebaseSDKVersion
  
  pod 'GoogleDataTransport'
  pod 'nanopb'
  pod 'PromisesObjC'

  # HEADERS corrigidos
  pod 'GoogleUtilities'
  pod 'GTMAppAuth'

  # Outros pods nativos
  pod 'DoubleConversion', :podspec => '../node_modules/react-native/third-party-podspecs/DoubleConversion.podspec'
  pod 'RCT-Folly', :podspec => '../node_modules/react-native/third-party-podspecs/RCT-Folly.podspec'
  pod 'boost', :podspec => '../node_modules/react-native/third-party-podspecs/boost.podspec'
  pod 'fmt', :podspec => '../node_modules/react-native/third-party-podspecs/fmt.podspec'
end