name: iOS Build and Deploy

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch: # Permite executar manualmente

jobs:
  build-ios:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm install
      
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.0'
        bundler-cache: true
        
    - name: Install CocoaPods
      run: |
        cd ios
        pod install
        
    - name: Import certificates and provisioning profiles
      env:
        BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
        P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
        BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
        KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
      run: |
        # Criar keychain temporÃ¡rio
        security create-keychain -p "$KEYCHAIN_PASSWORD" build.keychain
        security default-keychain -s build.keychain
        security unlock-keychain -p "$KEYCHAIN_PASSWORD" build.keychain
        
        # Importar certificado
        echo $BUILD_CERTIFICATE_BASE64 | base64 --decode > certificate.p12
        security import certificate.p12 -k build.keychain -P "$P12_PASSWORD" -T /usr/bin/codesign
        
        # Importar provisioning profile
        echo $BUILD_PROVISION_PROFILE_BASE64 | base64 --decode > build_pp.mobileprovision
        mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
        cp build_pp.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/
        
        # Configurar keychain para codesign
        security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "$KEYCHAIN_PASSWORD" build.keychain
        
    - name: Build iOS app
      run: |
        cd ios
        xcodebuild -workspace modamaskavo.xcworkspace \
                   -scheme modamaskavo \
                   -configuration Release \
                   -destination generic/platform=iOS \
                   -archivePath build/modamaskavo.xcarchive \
                   archive \
                   CODE_SIGNING_REQUIRED=YES \
                   CODE_SIGNING_ALLOWED=YES
                   
    - name: Export IPA
      run: |
        cd ios
        
        # Criar ExportOptions.plist
        cat > ExportOptions.plist << EOF
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
        <plist version="1.0">
        <dict>
            <key>method</key>
            <string>app-store</string>
            <key>teamID</key>
            <string>${{ secrets.TEAM_ID }}</string>
            <key>uploadBitcode</key>
            <false/>
            <key>uploadSymbols</key>
            <true/>
        </dict>
        </plist>
        EOF
        
        # Exportar IPA
        xcodebuild -exportArchive \
                   -archivePath build/modamaskavo.xcarchive \
                   -exportPath build \
                   -exportOptionsPlist ExportOptions.plist
                   
    - name: Upload to App Store Connect
      env:
        APP_STORE_CONNECT_USERNAME: ${{ secrets.APP_STORE_CONNECT_USERNAME }}
        APP_STORE_CONNECT_PASSWORD: ${{ secrets.APP_STORE_CONNECT_PASSWORD }}
      run: |
        cd ios/build
        
        # Upload para App Store Connect
        xcrun altool --upload-app \
                     --type ios \
                     --file *.ipa \
                     --username "$APP_STORE_CONNECT_USERNAME" \
                     --password "$APP_STORE_CONNECT_PASSWORD"
                     
    - name: Upload IPA as artifact
      uses: actions/upload-artifact@v4
      with:
        name: modamaskavo-ios
        path: ios/build/*.ipa
        retention-days: 30
