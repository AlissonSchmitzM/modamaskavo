workflows:
  ios-workflow:
    name: iOS Build Sem Dependências
    instance_type: mac_mini_m1
    environment:
      node: 18
      xcode: latest
    scripts:
      - name: Install npm dependencies only
        script: |
          npm install --production
          
      - name: Limpar configurações do CocoaPods do projeto
        script: |
          cd ios
          
          echo "🧹 Limpando configurações do CocoaPods..."
          
          # Backup do projeto original
          cp modamaskavo.xcodeproj/project.pbxproj modamaskavo.xcodeproj/project.pbxproj.backup
          
          # Remover referências ao CocoaPods do projeto
          sed -i '' '/Pods/d' modamaskavo.xcodeproj/project.pbxproj
          sed -i '' '/PODS_/d' modamaskavo.xcodeproj/project.pbxproj
          sed -i '' '/\.xcconfig/d' modamaskavo.xcodeproj/project.pbxproj
          sed -i '' '/CP\]/d' modamaskavo.xcodeproj/project.pbxproj
          
          # Criar xcconfig vazio para substituir o do Pods
          mkdir -p "Target Support Files/Pods-modamaskavo"
          touch "Target Support Files/Pods-modamaskavo/Pods-modamaskavo.release.xcconfig"
          
          # Criar arquivos xcfilelist vazios
          touch "Target Support Files/Pods-modamaskavo/Pods-modamaskavo-frameworks-Release-input-files.xcfilelist"
          touch "Target Support Files/Pods-modamaskavo/Pods-modamaskavo-frameworks-Release-output-files.xcfilelist"
          touch "Target Support Files/Pods-modamaskavo/Pods-modamaskavo-resources-Release-input-files.xcfilelist"
          touch "Target Support Files/Pods-modamaskavo/Pods-modamaskavo-resources-Release-output-files.xcfilelist"
          
          echo "✅ Configurações do CocoaPods removidas!"
          
      - name: Criar configuração mínima sem CocoaPods
        script: |
          cd ios
          
          # Criar um novo arquivo de configuração limpo
          cat > ios-build.xcconfig << 'EOF'
          // Configuração mínima para build iOS
          CLANG_ENABLE_OBJC_ARC = YES
          CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR
          GCC_C_LANGUAGE_STANDARD = gnu99
          IPHONEOS_DEPLOYMENT_TARGET = 11.0
          TARGETED_DEVICE_FAMILY = 1,2
          CODE_SIGNING_REQUIRED = NO
          CODE_SIGNING_ALLOWED = NO
          EOF
          
          # Aplicar configuração ao projeto usando PlistBuddy
          /usr/libexec/PlistBuddy -c "Set :objects:*:buildSettings:CLANG_ENABLE_OBJC_ARC YES" modamaskavo.xcodeproj/project.pbxproj 2>/dev/null || true
          
          echo "✅ Configuração mínima criada!"
          
      - name: Build iOS app SEM CocoaPods
        script: |
          cd ios
          
          # Criar pasta build
          mkdir -p build
          
          echo "🔨 Iniciando build SEM CocoaPods..."
          
          # Build mais simples, ignorando dependências do CocoaPods
          xcodebuild -project modamaskavo.xcodeproj \
                     -scheme modamaskavo \
                     -configuration Release \
                     -destination generic/platform=iOS \
                     -archivePath build/modamaskavo.xcarchive \
                     archive \
                     CODE_SIGNING_REQUIRED=NO \
                     CODE_SIGNING_ALLOWED=NO \
                     SKIP_INSTALL=NO \
                     BUILD_LIBRARY_FOR_DISTRIBUTION=YES \
                     ONLY_ACTIVE_ARCH=NO \
                     -quiet
          
          # Verificar se o comando foi bem-sucedido
          if [ $? -eq 0 ]; then
            echo "✅ Build concluído com sucesso!"
          else
            echo "❌ Build falhou! Tentando build alternativo..."
            
            # Tentar build mais básico
            xcodebuild -project modamaskavo.xcodeproj \
                       -scheme modamaskavo \
                       -configuration Release \
                       -destination generic/platform=iOS \
                       -archivePath build/modamaskavo.xcarchive \
                       archive \
                       CODE_SIGNING_REQUIRED=NO \
                       CODE_SIGNING_ALLOWED=NO \
                       VALIDATE_WORKSPACE=NO \
                       -allowProvisioningUpdates
            
            if [ $? -ne 0 ]; then
              echo "❌ Build alternativo também falhou!"
              exit 1
            fi
          fi
          
      - name: Verificar archive e criar IPA
        script: |
          cd ios/build
          
          echo "🔍 Verificando archive criado..."
          
          if [ ! -d "modamaskavo.xcarchive" ]; then
            echo "❌ Archive não foi criado!"
            exit 1
          fi
          
          echo "✅ Archive encontrado!"
          
          # Encontrar o .app dentro do archive
          APP_PATH=$(find modamaskavo.xcarchive -name "*.app" -type d | head -1)
          
          if [ -z "$APP_PATH" ]; then
            echo "❌ App não encontrado no archive!"
            echo "📁 Conteúdo do archive:"
            find modamaskavo.xcarchive -type d -name "*" | head -20
            exit 1
          fi
          
          echo "📱 App encontrado em: $APP_PATH"
          
          # Copiar .app para pasta atual
          cp -r "$APP_PATH" ./modamaskavo.app
          
          # Criar Payload para IPA
          mkdir -p Payload
          cp -r modamaskavo.app Payload/
          
          # Criar IPA
          zip -r modamaskavo.ipa Payload/
          
          echo "✅ IPA criado com sucesso!"
          ls -la *.ipa
          
          # Copiar para raiz
          cp modamaskavo.ipa ../../modamaskavo-final.ipa
          
      - name: Verificar arquivos finais
        script: |
          echo "📁 Arquivos disponíveis para download:"
          ls -la ios/build/*.ipa 2>/dev/null || echo "Nenhum IPA em ios/build"
          ls -la *.ipa 2>/dev/null || echo "Nenhum IPA na raiz"
          
          if [ -f "modamaskavo-final.ipa" ]; then
            echo "✅ IPA final criado: $(du -h modamaskavo-final.ipa)"
          fi
          
    artifacts:
      - ios/build/*.ipa
      - ios/build/*.app
      - ios/build/*.xcarchive
      - modamaskavo-final.ipa
