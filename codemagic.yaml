workflows:
  ios-workflow-debug:
    name: iOS Build Debug Completo
    instance_type: mac_mini_m1
    environment:
      node: 18
      xcode: latest
    scripts:
      - name: Install npm dependencies
        script: |
          npm install --production
          
      - name: Verificar projeto antes do build
        script: |
          cd ios
          
          echo "🔍 Verificando estrutura do projeto..."
          
          # Verificar se o projeto existe
          if [ -f "modamaskavo.xcodeproj/project.pbxproj" ]; then
            echo "✅ Projeto Xcode encontrado"
          else
            echo "❌ Projeto Xcode não encontrado!"
            echo "📁 Arquivos disponíveis:"
            ls -la
            exit 1
          fi
          
          # Verificar schemes disponíveis
          echo "📋 Schemes disponíveis:"
          xcodebuild -project modamaskavo.xcodeproj -list
          
          # Verificar targets
          echo "📋 Targets disponíveis:"
          xcodebuild -project modamaskavo.xcodeproj -list | grep -A 10 "Targets:"
          
      - name: Criar estrutura CocoaPods
        script: |
          cd ios
          
          echo "🔧 Criando estrutura CocoaPods..."
          
          mkdir -p "Pods/Target Support Files/Pods-modamaskavo"
          mkdir -p "Target Support Files/Pods-modamaskavo"
          
          # Arquivo xcconfig
          cat > "Pods/Target Support Files/Pods-modamaskavo/Pods-modamaskavo.release.xcconfig" << 'EOF'
          CLANG_ENABLE_OBJC_ARC = YES
          IPHONEOS_DEPLOYMENT_TARGET = 11.0
          OTHER_LDFLAGS = 
          PODS_BUILD_DIR = ${BUILD_DIR}
          PODS_CONFIGURATION_BUILD_DIR = ${PODS_BUILD_DIR}/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)
          PODS_PODFILE_DIR_PATH = ${SRCROOT}/.
          PODS_ROOT = ${SRCROOT}/Pods
          EOF
          
          cp "Pods/Target Support Files/Pods-modamaskavo/Pods-modamaskavo.release.xcconfig" "Target Support Files/Pods-modamaskavo/"
          
          # Arquivos xcfilelist vazios
          touch "Pods/Target Support Files/Pods-modamaskavo/Pods-modamaskavo-frameworks-Release-input-files.xcfilelist"
          touch "Pods/Target Support Files/Pods-modamaskavo/Pods-modamaskavo-frameworks-Release-output-files.xcfilelist"
          touch "Pods/Target Support Files/Pods-modamaskavo/Pods-modamaskavo-resources-Release-input-files.xcfilelist"
          touch "Pods/Target Support Files/Pods-modamaskavo/Pods-modamaskavo-resources-Release-output-files.xcfilelist"
          
          cp "Pods/Target Support Files/Pods-modamaskavo/"*.xcfilelist "Target Support Files/Pods-modamaskavo/"
          
          # Scripts vazios
          cat > "Pods/Target Support Files/Pods-modamaskavo/Pods-modamaskavo-frameworks.sh" << 'EOF'
          #!/bin/sh
          echo "CocoaPods frameworks script vazio"
          exit 0
          EOF
          
          cat > "Pods/Target Support Files/Pods-modamaskavo/Pods-modamaskavo-resources.sh" << 'EOF'
          #!/bin/sh
          echo "CocoaPods resources script vazio"
          exit 0
          EOF
          
          chmod +x "Pods/Target Support Files/Pods-modamaskavo/"*.sh
          cp "Pods/Target Support Files/Pods-modamaskavo/"*.sh "Target Support Files/Pods-modamaskavo/"
          
          echo "✅ Estrutura CocoaPods criada!"
          
      - name: Build com logs completos
        script: |
          cd ios
          
          mkdir -p build
          
          echo "🔨 Iniciando build com logs completos..."
          
          # Build SEM -quiet para ver TODOS os erros
          xcodebuild -project modamaskavo.xcodeproj \
                     -scheme modamaskavo \
                     -configuration Release \
                     -destination generic/platform=iOS \
                     -archivePath build/modamaskavo.xcarchive \
                     archive \
                     CODE_SIGNING_REQUIRED=NO \
                     CODE_SIGNING_ALLOWED=NO \
                     SKIP_INSTALL=NO \
                     ONLY_ACTIVE_ARCH=NO \
                     -allowProvisioningUpdates \
                     -verbose 2>&1 | tee build-log.txt
          
          BUILD_RESULT=$?
          
          echo ""
          echo "📊 Resultado do build: $BUILD_RESULT"
          
          if [ $BUILD_RESULT -eq 0 ]; then
            echo "✅ Build bem-sucedido!"
          else
            echo "❌ Build falhou!"
            echo ""
            echo "🔍 ÚLTIMAS LINHAS DO LOG DE ERRO:"
            tail -50 build-log.txt
            echo ""
            echo "🔍 PROCURANDO POR ERROS ESPECÍFICOS:"
            grep -i "error:" build-log.txt | head -10
            echo ""
            echo "🔍 PROCURANDO POR WARNINGS:"
            grep -i "warning:" build-log.txt | head -5
          fi
          
      - name: Diagnóstico completo de arquivos
        script: |
          cd ios
          
          echo "🔍 Diagnóstico completo de arquivos..."
          
          # Verificar se build folder existe
          if [ -d "build" ]; then
            echo "📁 Conteúdo da pasta build:"
            find build -type f -exec ls -lh {} \; | head -20
          else
            echo "❌ Pasta build não existe!"
          fi
          
          # Verificar se archive foi criado
          if [ -d "build/modamaskavo.xcarchive" ]; then
            echo "✅ Archive encontrado!"
            echo "📦 Conteúdo do archive:"
            find build/modamaskavo.xcarchive -type f | head -20
            
            # Procurar especificamente por .app
            echo "📱 Procurando .app no archive:"
            find build/modamaskavo.xcarchive -name "*.app" -type d
          else
            echo "❌ Archive não foi criado!"
          fi
          
          # Procurar por .app em QUALQUER lugar
          echo "📱 Procurando .app em todo o projeto:"
          find . -name "*.app" -type d 2>/dev/null | head -10
          
          # Verificar pasta DerivedData se existe
          echo "📁 Verificando pastas de build alternativas:"
          find . -name "*.app" -type d -exec ls -lah {} \; 2>/dev/null | head -10
          
          # Procurar por arquivos .o (object files)
          echo "📄 Verificando se compilou algum arquivo:"
          find . -name "*.o" | head -5
          
      - name: Tentar build mais simples
        script: |
          cd ios
          
          echo "🔨 Tentando build mais simples..."
          
          # Limpar build anterior
          rm -rf build
          mkdir -p build
          
          # Build apenas o target, sem archive
          echo "📱 Tentando build direto do target..."
          xcodebuild -project modamaskavo.xcodeproj \
                     -scheme modamaskavo \
                     -configuration Release \
                     -destination generic/platform=iOS \
                     build \
                     CODE_SIGNING_REQUIRED=NO \
                     CODE_SIGNING_ALLOWED=NO \
                     ONLY_ACTIVE_ARCH=NO \
                     -allowProvisioningUpdates \
                     2>&1 | tee simple-build-log.txt
          
          SIMPLE_BUILD_RESULT=$?
          
          echo "📊 Resultado do build simples: $SIMPLE_BUILD_RESULT"
          
          if [ $SIMPLE_BUILD_RESULT -eq 0 ]; then
            echo "✅ Build simples funcionou!"
            
            # Procurar por produtos do build
            echo "📱 Procurando produtos do build:"
            find . -name "*.app" -type d -newer simple-build-log.txt 2>/dev/null
            
            # Verificar DerivedData
            echo "📁 Verificando DerivedData:"
            find . -path "*/DerivedData/*" -name "*.app" -type d 2>/dev/null | head -5
            
          else
            echo "❌ Build simples também falhou!"
            echo "🔍 Últimos erros:"
            tail -30 simple-build-log.txt
          fi
          
      - name: Análise de erros e soluções
        script: |
          cd ios
          
          echo "🔍 ANÁLISE DE ERROS E SOLUÇÕES"
          echo "=============================="
          
          # Verificar se existem logs
          if [ -f "build-log.txt" ]; then
            echo "📋 Analisando erros mais comuns..."
            
            # Verificar erros de dependências
            if grep -q "No such module" build-log.txt; then
              echo "🚨 ERRO: Módulos não encontrados"
              grep "No such module" build-log.txt
              echo "💡 SOLUÇÃO: Problema com dependências/imports"
            fi
            
            # Verificar erros de CocoaPods
            if grep -q "Pods" build-log.txt; then
              echo "🚨 ERRO: Problemas com CocoaPods"
              grep -i "pods" build-log.txt | head -3
              echo "💡 SOLUÇÃO: Estrutura CocoaPods incorreta"
            fi
            
            # Verificar erros de arquivo não encontrado
            if grep -q "No such file" build-log.txt; then
              echo "🚨 ERRO: Arquivos não encontrados"
              grep "No such file" build-log.txt | head -3
              echo "💡 SOLUÇÃO: Arquivos faltando no projeto"
            fi
            
            # Verificar erros de sintaxe
            if grep -q "Expected" build-log.txt; then
              echo "🚨 ERRO: Erros de sintaxe no código"
              grep "Expected" build-log.txt | head -3
              echo "💡 SOLUÇÃO: Corrigir código Swift/Objective-C"
            fi
            
          else
            echo "❌ Nenhum log de build encontrado!"
          fi
          
          # Criar relatório de diagnóstico
          cat > ../../diagnostic-report.txt << EOF
          Relatório de Diagnóstico - $(date)
          ===================================
          
          PROBLEMA: Build falha e não gera .app
          RESULTADO: IPA de teste com 574 bytes
          
          VERIFICAÇÕES REALIZADAS:
          - Projeto Xcode: $([ -f "modamaskavo.xcodeproj/project.pbxproj" ] && echo "✅ Existe" || echo "❌ Não existe")
          - Estrutura CocoaPods: ✅ Criada
          - Build Archive: $([ -d "build/modamaskavo.xcarchive" ] && echo "✅ Criado" || echo "❌ Falhou")
          - Arquivos .app: $(find . -name "*.app" -type d | wc -l) encontrados
          
          PRÓXIMOS PASSOS:
          1. Verificar logs de build acima
          2. Corrigir erros de compilação
          3. Verificar dependências do projeto
          4. Verificar configurações do Xcode
          
          LOGS DISPONÍVEIS:
          - build-log.txt (build completo)
          - simple-build-log.txt (build simples)
          EOF
          
          echo "📄 Relatório de diagnóstico criado!"
          
    artifacts:
      - ios/build-log.txt
      - ios/simple-build-log.txt
      - diagnostic-report.txt
      - ios/build/*.ipa
      - ios/build/*.app
      - ios/build/*.xcarchive
