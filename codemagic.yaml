# codemagic.yaml
# Este arquivo define o fluxo de build para o CodeMagic

workflows:
  ios-build:
    name: iOS Build
    instance_type: mac_mini_m1 # ou mac_mini_m2, dependendo da sua necessidade e plano

    # Removendo o bloco 'integrations' pois a conexão GitHub já é feita na UI do CodeMagic
    # integrations:
    #   github:
    #     integration_id: SEU_ID_AQUI # Esta linha não é necessária se a integração já foi feita na UI

    environment:
      # Versão do Node.js que seu projeto usa (verifique seu package.json ou use a que funciona localmente)
      groups:
        - apple_developer_portal_credentials
      vars:
        XCODE_SCHEME: 'modamaskavo'

    scripts:
      - name: Install npm dependencies
        script: |
          npm install

      - name: Clean and Install CocoaPods
        script: |
          cd ios
          # Limpeza agressiva do CocoaPods
          pod deintegrate || true # Deintegrate se já estiver integrado
          rm -rf Pods
          rm -f Podfile.lock
          pod install

      - name: Set up code signing settings on Xcode project
        script: |
          # Esta linha usa as credenciais do Codemagic para configurar a assinatura de código automaticamente.
          xcode-project use-profiles

          # Adicione esta linha para definir explicitamente o ID da sua equipe de desenvolvimento e o estilo de assinatura.
          # SUBSTITUA 'YOUR_DEVELOPMENT_TEAM_ID' PELO SEU REAL TEAM ID DA APPLE DEVELOPER.
          xcode-project set-project-build-settings \
            --project "ios/modamaskavo.xcodeproj" \
            --target "modamaskavo" \
            --setting "DEVELOPMENT_TEAM=YOUR_DEVELOPMENT_TEAM_ID" \
            --setting "CODE_SIGN_STYLE=Automatic" # 'Automatic' é geralmente o mais fácil para CI/CD

      - name: Build iOS app
        script: |
          if [ -d "ios/modamaskavo.xcworkspace" ]; then
            echo "Usando .xcworkspace"
            xcode-project build-ipa \
              --workspace "ios/modamaskavo.xcworkspace" \
              --scheme "$XCODE_SCHEME" \
              --clean # Adicionar --clean para garantir um build limpo
          elif [ -d "ios/modamaskavo.xcodeproj" ]; then
            echo "Usando .xcodeproj"
            xcode-project build-ipa \
              --project "ios/modamaskavo.xcodeproj" \
              --scheme "$XCODE_SCHEME" \
              --clean # Adicionar --clean para garantir um build limpo
          else
            echo "Erro: Não foi encontrado .xcworkspace nem .xcodeproj na pasta ios/"
            exit 1
          fi

    artifacts:
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.app
      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM

    # Removendo o bloco 'publishing' para evitar o erro 'none is not an allowed value'
    # Se você quiser configurar a publicação, adicione o bloco completo aqui com as configurações corretas.
    # publishing:
    #   apple_app_store:
    #     api_key:
    #       id: Encrypted
    #       issuer_id: Encrypted
    #     track: TestFlight
    #     submit_for_review: false
    #     automatic_release: false
