workflows:
  ios-workflow-final:
    name: iOS Build - Solu√ß√£o Final
    instance_type: mac_mini_m1
    environment:
      node: 18
      xcode: latest
    scripts:
      - name: Install npm dependencies
        script: |
          echo "üì¶ Instalando depend√™ncias npm..."
          npm install
          
      - name: Verificar e corrigir deployment target
        script: |
          cd ios
          
          echo "üîç Verificando Podfile original..."
          if [ -f "Podfile" ]; then
            cat Podfile
            
            echo ""
            echo "üîß Corrigindo deployment target para iOS 13.0..."
            
            # Backup
            cp Podfile Podfile.backup
            
            # For√ßar iOS 13.0 como deployment target
            sed -i.bak "s/platform :ios, '[^']*'/platform :ios, '13.0'/" Podfile
            
            # Se n√£o encontrou a linha, adicionar
            if ! grep -q "platform :ios" Podfile; then
              echo "platform :ios, '13.0'" > Podfile.new
              cat Podfile >> Podfile.new
              mv Podfile.new Podfile
            fi
            
            # Garantir que post_install existe para for√ßar deployment target
            if ! grep -q "post_install" Podfile; then
              echo "" >> Podfile
              echo "post_install do |installer|" >> Podfile
              echo "  installer.pods_project.targets.each do |target|" >> Podfile
              echo "    target.build_configurations.each do |config|" >> Podfile
              echo "      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '13.0'" >> Podfile
              echo "    end" >> Podfile
              echo "  end" >> Podfile
              echo "end" >> Podfile
            fi
            
            echo ""
            echo "üìÑ Podfile corrigido:"
            cat Podfile
          fi
          
      - name: Instalar CocoaPods com deployment target correto
        script: |
          cd ios
          
          echo "üßπ Limpando instala√ß√µes anteriores..."
          rm -rf Pods
          rm -f Podfile.lock
          pod cache clean --all
          
          echo "üì¶ Instalando CocoaPods com iOS 13.0..."
          pod install --verbose --repo-update
          
          if [ $? -eq 0 ]; then
            echo "‚úÖ CocoaPods instalado com sucesso!"
          else
            echo "‚ùå CocoaPods falhou! Tentando com deployment target expl√≠cito..."
            
            # √öltima tentativa com deployment target expl√≠cito
            IPHONEOS_DEPLOYMENT_TARGET=13.0 pod install --verbose --repo-update
            
            if [ $? -ne 0 ]; then
              echo "‚ùå Falha total no CocoaPods!"
              exit 1
            fi
          fi
          
      - name: Verificar se workspace foi criado
        script: |
          cd ios
          
          if [ -f "modamaskavo.xcworkspace/contents.xcworkspacedata" ]; then
            echo "‚úÖ Workspace criado com sucesso!"
          else
            echo "‚ùå Workspace n√£o foi criado!"
            exit 1
          fi
          
          if [ -d "Pods" ]; then
            echo "‚úÖ Pods instalados!"
            echo "üìÅ Principais pods:"
            ls -la Pods/ | grep -E "(React|RN)" | head -5
          else
            echo "‚ùå Pods n√£o instalados!"
            exit 1
          fi
          
      - name: Build iOS com workspace
        script: |
          cd ios
          
          mkdir -p build
          
          echo "üî® Iniciando build com workspace..."
          
          xcodebuild -workspace modamaskavo.xcworkspace \
                     -scheme modamaskavo \
                     -configuration Release \
                     -destination generic/platform=iOS \
                     -archivePath build/modamaskavo.xcarchive \
                     archive \
                     CODE_SIGNING_REQUIRED=NO \
                     CODE_SIGNING_ALLOWED=NO \
                     SKIP_INSTALL=NO \
                     ONLY_ACTIVE_ARCH=NO \
                     IPHONEOS_DEPLOYMENT_TARGET=13.0 \
                     -allowProvisioningUpdates
          
          if [ $? -eq 0 ]; then
            echo "‚úÖ Build bem-sucedido!"
            
            # Procurar .app
            APP_PATH=$(find build/modamaskavo.xcarchive -name "*.app" -type d | head -1)
            
            if [ -n "$APP_PATH" ]; then
              echo "üì± App encontrado: $APP_PATH"
              
              # Verificar tamanho
              APP_SIZE=$(du -sh "$APP_PATH" | cut -f1)
              echo "üìä Tamanho do app: $APP_SIZE"
              
              # Criar IPA
              cd build
              cp -r "$APP_PATH" ./modamaskavo.app
              mkdir -p Payload
              cp -r modamaskavo.app Payload/
              zip -r modamaskavo.ipa Payload/
              
              if [ -f "modamaskavo.ipa" ]; then
                IPA_SIZE=$(du -sh modamaskavo.ipa | cut -f1)
                IPA_BYTES=$(wc -c < modamaskavo.ipa)
                
                echo "‚úÖ IPA criado com sucesso!"
                echo "üìä Tamanho do IPA: $IPA_SIZE ($IPA_BYTES bytes)"
                
                cp modamaskavo.ipa ../../modamaskavo-final.ipa
                
                if [ $IPA_BYTES -gt 10000000 ]; then
                  echo "üéâ IPA v√°lido para React Native!"
                else
                  echo "‚ö†Ô∏è  IPA pequeno, mas foi criado"
                fi
              fi
            fi
          else
            echo "‚ùå Build falhou!"
          fi
          
      - name: Relat√≥rio final
        script: |
          echo "üìã RELAT√ìRIO FINAL"
          echo "=================="
          
          echo "üì± IPAs encontrados:"
          find . -name "*.ipa" -exec ls -lh {} \;
          
          echo ""
          echo "üìä Status:"
          echo "- Podfile corrigido: ‚úÖ"
          echo "- CocoaPods instalado: $([ -d "ios/Pods" ] && echo "‚úÖ" || echo "‚ùå")"
          echo "- Workspace criado: $([ -f "ios/modamaskavo.xcworkspace/contents.xcworkspacedata" ] && echo "‚úÖ" || echo "‚ùå")"
          echo "- Build realizado: $([ -d "ios/build" ] && echo "‚úÖ" || echo "‚ùå")"
          
    artifacts:
      - ios/build/*.ipa
      - ios/build/*.app
      - ios/build/*.xcarchive
      - ios/Podfile.backup
      - ios/Podfile.lock
      - "*.ipa"
