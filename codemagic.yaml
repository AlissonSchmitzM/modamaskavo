workflows:
  ios-appstore-workflow:
    name: iOS Build para App Store
    instance_type: mac_mini_m1
    environment:
      node: 18
      xcode: latest
      ios_signing:
        distribution_type: app_store
        bundle_identifier: com.modamaskavo  # MUDE AQUI
      vars:
        APP_STORE_USERNAME: $APP_STORE_USERNAME  # Adicione nas vari√°veis do Codemagic
        APP_STORE_PASSWORD: $APP_STORE_PASSWORD  # Senha espec√≠fica do app
    scripts:
      - name: Install npm dependencies
        script: |
          npm install --production
          
      - name: Criar estrutura CocoaPods completa
        script: |
          cd ios
          
          echo "üîß Criando estrutura CocoaPods completa..."
          
          # Criar todas as pastas necess√°rias
          mkdir -p "Pods/Target Support Files/Pods-modamaskavo"
          mkdir -p "Target Support Files/Pods-modamaskavo"
          
          # Criar arquivo xcconfig
          cat > "Pods/Target Support Files/Pods-modamaskavo/Pods-modamaskavo.release.xcconfig" << 'EOF'
          CLANG_ENABLE_OBJC_ARC = YES
          IPHONEOS_DEPLOYMENT_TARGET = 11.0
          OTHER_LDFLAGS = 
          PODS_BUILD_DIR = ${BUILD_DIR}
          PODS_CONFIGURATION_BUILD_DIR = ${PODS_BUILD_DIR}/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)
          PODS_PODFILE_DIR_PATH = ${SRCROOT}/.
          PODS_ROOT = ${SRCROOT}/Pods
          EOF
          
          # Copiar para o local alternativo
          cp "Pods/Target Support Files/Pods-modamaskavo/Pods-modamaskavo.release.xcconfig" "Target Support Files/Pods-modamaskavo/"
          
          # Criar arquivos xcfilelist COMPLETAMENTE VAZIOS
          touch "Pods/Target Support Files/Pods-modamaskavo/Pods-modamaskavo-frameworks-Release-input-files.xcfilelist"
          touch "Pods/Target Support Files/Pods-modamaskavo/Pods-modamaskavo-frameworks-Release-output-files.xcfilelist"
          touch "Pods/Target Support Files/Pods-modamaskavo/Pods-modamaskavo-resources-Release-input-files.xcfilelist"
          touch "Pods/Target Support Files/Pods-modamaskavo/Pods-modamaskavo-resources-Release-output-files.xcfilelist"
          
          # Copiar para ambos os locais
          cp "Pods/Target Support Files/Pods-modamaskavo/"*.xcfilelist "Target Support Files/Pods-modamaskavo/"
          
          # Criar scripts vazios
          cat > "Pods/Target Support Files/Pods-modamaskavo/Pods-modamaskavo-frameworks.sh" << 'EOF'
          #!/bin/sh
          echo "CocoaPods frameworks script vazio"
          exit 0
          EOF
          
          cat > "Pods/Target Support Files/Pods-modamaskavo/Pods-modamaskavo-resources.sh" << 'EOF'
          #!/bin/sh
          echo "CocoaPods resources script vazio"
          exit 0
          EOF
          
          chmod +x "Pods/Target Support Files/Pods-modamaskavo/"*.sh
          cp "Pods/Target Support Files/Pods-modamaskavo/"*.sh "Target Support Files/Pods-modamaskavo/"
          
          echo "‚úÖ Estrutura CocoaPods completa criada!"
          
      - name: Criar ExportOptions.plist
        script: |
          cd ios
          
          # Criar arquivo de op√ß√µes de exporta√ß√£o para App Store
          cat > ExportOptions.plist << 'EOF'
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
              <key>method</key>
              <string>app-store</string>
              <key>uploadBitcode</key>
              <true/>
              <key>uploadSymbols</key>
              <true/>
              <key>compileBitcode</key>
              <true/>
              <key>teamID</key>
              <string>$TEAM_ID</string>
              <key>provisioningProfiles</key>
              <dict>
                  <key>com.seudominio.modamaskavo</key>
                  <string>$PROVISIONING_PROFILE_SPECIFIER</string>
              </dict>
          </dict>
          </plist>
          EOF
          
          echo "‚úÖ ExportOptions.plist criado!"
          
      - name: Build iOS app para App Store
        script: |
          cd ios
          
          mkdir -p build
          
          echo "üî® Iniciando build para App Store..."
          
          # Build com assinatura de c√≥digo para App Store
          xcodebuild -project modamaskavo.xcodeproj \
                     -scheme modamaskavo \
                     -configuration Release \
                     -destination generic/platform=iOS \
                     -archivePath build/modamaskavo.xcarchive \
                     archive \
                     SKIP_INSTALL=NO \
                     ONLY_ACTIVE_ARCH=NO \
                     CODE_SIGNING_REQUIRED=YES \
                     CODE_SIGNING_ALLOWED=YES \
                     -allowProvisioningUpdates
          
          if [ $? -eq 0 ]; then
            echo "‚úÖ Archive criado com sucesso!"
          else
            echo "‚ùå Falha ao criar archive!"
            exit 1
          fi
          
      - name: Exportar IPA para App Store
        script: |
          cd ios
          
          echo "üì¶ Exportando IPA para App Store..."
          
          # Exportar IPA usando ExportOptions.plist
          xcodebuild -exportArchive \
                     -archivePath build/modamaskavo.xcarchive \
                     -exportPath build \
                     -exportOptionsPlist ExportOptions.plist \
                     -allowProvisioningUpdates
          
          if [ $? -eq 0 ]; then
            echo "‚úÖ IPA exportado com sucesso!"
            ls -la build/*.ipa
          else
            echo "‚ùå Falha ao exportar IPA!"
            exit 1
          fi
          
      - name: Validar IPA
        script: |
          cd ios/build
          
          echo "üîç Validando IPA..."
          
          # Validar IPA antes de enviar
          xcrun altool --validate-app \
                       --type ios \
                       --file modamaskavo.ipa \
                       --username $APP_STORE_USERNAME \
                       --password $APP_STORE_PASSWORD
          
          if [ $? -eq 0 ]; then
            echo "‚úÖ IPA validado com sucesso!"
          else
            echo "‚ö†Ô∏è  Valida√ß√£o falhou, mas continuando..."
          fi
          
      - name: Enviar para App Store Connect
        script: |
          cd ios/build
          
          echo "üöÄ Enviando para App Store Connect..."
          
          # Enviar IPA para App Store Connect
          xcrun altool --upload-app \
                       --type ios \
                       --file modamaskavo.ipa \
                       --username $APP_STORE_USERNAME \
                       --password $APP_STORE_PASSWORD
          
          if [ $? -eq 0 ]; then
            echo "‚úÖ App enviado com sucesso para App Store Connect!"
            echo "üì± Agora voc√™ pode processar o build no App Store Connect"
          else
            echo "‚ùå Falha ao enviar para App Store Connect!"
            exit 1
          fi
          
      - name: Backup do IPA
        script: |
          cd ios/build
          
          # Criar backup do IPA com timestamp
          if [ -f "modamaskavo.ipa" ]; then
            cp modamaskavo.ipa "../../modamaskavo-appstore-$(date +%Y%m%d-%H%M%S).ipa"
            echo "‚úÖ Backup do IPA criado!"
          fi
          
    artifacts:
      - ios/build/*.ipa
      - ios/build/*.xcarchive
      - "*.ipa"
