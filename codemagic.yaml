workflows:
  ios-workflow-debug-pods:
    name: iOS Build - Debug CocoaPods Completo
    instance_type: mac_mini_m1
    environment:
      node: 18
      xcode: latest
    scripts:
      - name: Install npm dependencies
        script: |
          echo "üì¶ Instalando depend√™ncias npm..."
          npm install
          
      - name: Verificar Podfile original
        script: |
          cd ios
          
          echo "üîç Verificando Podfile original..."
          
          if [ -f "Podfile" ]; then
            echo "üìÑ Conte√∫do do Podfile original:"
            cat Podfile
            echo ""
            echo "üìä Informa√ß√µes do Podfile:"
            echo "- Linhas: $(wc -l < Podfile)"
            echo "- Tamanho: $(wc -c < Podfile) bytes"
          else
            echo "‚ùå Podfile n√£o encontrado!"
            echo "üìÅ Arquivos na pasta ios:"
            ls -la
            exit 1
          fi
          
      - name: Tentar pod install SEM modificar Podfile
        script: |
          cd ios
          
          echo "üîß Tentando pod install com Podfile original..."
          
          # Limpar instala√ß√µes anteriores
          rm -rf Pods
          rm -f Podfile.lock
          
          # Limpar cache
          pod cache clean --all
          
          # Tentar com Podfile original
          echo "üì¶ Executando pod install com Podfile original..."
          pod install --verbose 2>&1 | tee pod-install-original.log
          
          ORIGINAL_RESULT=$?
          
          echo ""
          echo "üìä Resultado com Podfile original: $ORIGINAL_RESULT"
          
          if [ $ORIGINAL_RESULT -eq 0 ]; then
            echo "‚úÖ Pod install funcionou com Podfile original!"
          else
            echo "‚ùå Pod install falhou com Podfile original!"
            echo "üîç √öltimas linhas do erro:"
            tail -20 pod-install-original.log
            
            echo ""
            echo "üîç Erros espec√≠ficos:"
            grep -i "error" pod-install-original.log | head -5
            grep -i "could not find" pod-install-original.log | head -3
            grep -i "deployment target" pod-install-original.log | head -3
          fi
          
      - name: Modificar Podfile se necess√°rio
        script: |
          cd ios
          
          # Se o pod install original falhou, vamos modificar
          if [ ! -f "modamaskavo.xcworkspace/contents.xcworkspacedata" ]; then
            echo "üîß Pod install original falhou, modificando Podfile..."
            
            # Backup
            cp Podfile Podfile.backup
            
            # Verificar deployment target atual
            CURRENT_TARGET=$(grep "platform :ios" Podfile | grep -o "'[^']*'" | tr -d "'")
            echo "üìä Deployment target atual: $CURRENT_TARGET"
            
            # Se for menor que 13.0, corrigir
            if [[ "$CURRENT_TARGET" < "13.0" ]]; then
              echo "üîß Corrigindo deployment target para 13.0..."
              sed -i.bak "s/platform :ios, '[^']*'/platform :ios, '13.0'/" Podfile
              
              echo "üìÑ Podfile ap√≥s corre√ß√£o:"
              cat Podfile
              
              # Limpar e tentar novamente
              rm -rf Pods
              rm -f Podfile.lock
              
              echo "üì¶ Tentando pod install com deployment target corrigido..."
              pod install --verbose 2>&1 | tee pod-install-fixed.log
              
              FIXED_RESULT=$?
              
              if [ $FIXED_RESULT -eq 0 ]; then
                echo "‚úÖ Pod install funcionou com deployment target corrigido!"
              else
                echo "‚ùå Pod install ainda falhou!"
                echo "üîç √öltimas linhas do erro:"
                tail -20 pod-install-fixed.log
              fi
            else
              echo "‚úÖ Deployment target j√° est√° correto ($CURRENT_TARGET)"
            fi
          else
            echo "‚úÖ Pod install original funcionou!"
          fi
          
      - name: Tentar solu√ß√µes alternativas
        script: |
          cd ios
          
          if [ ! -f "modamaskavo.xcworkspace/contents.xcworkspacedata" ]; then
            echo "üîß Tentando solu√ß√µes alternativas..."
            
            # Solu√ß√£o 1: Atualizar reposit√≥rio
            echo "üîÑ Tentativa 1: Atualizando reposit√≥rio CocoaPods..."
            pod repo update
            pod install --verbose 2>&1 | tee pod-install-repo-update.log
            
            if [ -f "modamaskavo.xcworkspace/contents.xcworkspacedata" ]; then
              echo "‚úÖ Funcionou com repo update!"
            else
              # Solu√ß√£o 2: Instalar sem cache
              echo "üîÑ Tentativa 2: Instalando sem cache..."
              pod cache clean --all
              pod install --verbose --clean-install 2>&1 | tee pod-install-clean.log
              
              if [ -f "modamaskavo.xcworkspace/contents.xcworkspacedata" ]; then
                echo "‚úÖ Funcionou com clean install!"
              else
                # Solu√ß√£o 3: For√ßar vers√£o espec√≠fica
                echo "üîÑ Tentativa 3: For√ßando vers√£o espec√≠fica..."
                pod install --verbose --deployment-target=12.0 2>&1 | tee pod-install-deploy.log
                
                if [ -f "modamaskavo.xcworkspace/contents.xcworkspacedata" ]; then
                  echo "‚úÖ Funcionou com deployment target 12.0!"
                else
                  echo "‚ùå Todas as tentativas falharam!"
                fi
              fi
            fi
          fi
          
      - name: An√°lise completa dos logs
        script: |
          cd ios
          
          echo "üîç AN√ÅLISE COMPLETA DOS LOGS"
          echo "============================"
          
          # Verificar status final
          if [ -f "modamaskavo.xcworkspace/contents.xcworkspacedata" ]; then
            echo "‚úÖ STATUS: Workspace criado com sucesso!"
            
            # Verificar pods instalados
            if [ -d "Pods" ]; then
              echo "üìÅ Pods instalados:"
              ls -la Pods/ | grep -E "(React|RN)" | head -5
            fi
            
            # Verificar Podfile.lock
            if [ -f "Podfile.lock" ]; then
              echo "üìÑ Podfile.lock criado!"
              echo "üìä Deployment target no lock:"
              grep -A 2 -B 2 "IPHONEOS_DEPLOYMENT_TARGET" Podfile.lock | head -5
            fi
            
          else
            echo "‚ùå STATUS: Workspace N√ÉO foi criado!"
            
            # Analisar todos os logs
            echo ""
            echo "üîç AN√ÅLISE DE TODOS OS LOGS:"
            
            for log_file in pod-install-*.log; do
              if [ -f "$log_file" ]; then
                echo ""
                echo "üìÑ An√°lise de $log_file:"
                
                # Erros mais comuns
                if grep -q "deployment target" "$log_file"; then
                  echo "üö® ERRO: Deployment target incompat√≠vel"
                  grep -A 2 -B 2 "deployment target" "$log_file" | head -5
                fi
                
                if grep -q "could not find compatible versions" "$log_file"; then
                  echo "üö® ERRO: Vers√µes incompat√≠veis"
                  grep -A 3 "could not find compatible versions" "$log_file" | head -5
                fi
                
                if grep -q "No such file" "$log_file"; then
                  echo "üö® ERRO: Arquivo n√£o encontrado"
                  grep "No such file" "$log_file" | head -3
                fi
                
                if grep -q "network" "$log_file"; then
                  echo "üö® ERRO: Problema de rede"
                  grep -i "network" "$log_file" | head -3
                fi
              fi
            done
            
            # Sugest√µes baseadas nos erros
            echo ""
            echo "üí° SUGEST√ïES:"
            echo "1. Verificar se o Podfile est√° correto"
            echo "2. Verificar se as depend√™ncias do React Native est√£o corretas"
            echo "3. Verificar se o deployment target √© compat√≠vel"
            echo "4. Verificar conex√£o de rede"
          fi
          
      - name: Tentar build mesmo sem workspace
        script: |
          cd ios
          
          if [ ! -f "modamaskavo.xcworkspace/contents.xcworkspacedata" ]; then
            echo "‚ö†Ô∏è  Tentando build sem workspace (s√≥ com project)..."
            
            mkdir -p build
            
            xcodebuild -project modamaskavo.xcodeproj \
                       -scheme modamaskavo \
                       -configuration Release \
                       -destination generic/platform=iOS \
                       -archivePath build/modamaskavo.xcarchive \
                       archive \
                       CODE_SIGNING_REQUIRED=NO \
                       CODE_SIGNING_ALLOWED=NO \
                       SKIP_INSTALL=NO \
                       ONLY_ACTIVE_ARCH=NO \
                       -allowProvisioningUpdates \
                       2>&1 | tee build-without-workspace.log
            
            BUILD_RESULT=$?
            
            if [ $BUILD_RESULT -eq 0 ]; then
              echo "‚úÖ Build funcionou sem workspace!"
              
              # Procurar .app
              APP_PATH=$(find build/modamaskavo.xcarchive -name "*.app" -type d | head -1)
              
              if [ -n "$APP_PATH" ]; then
                echo "üì± App encontrado: $APP_PATH"
                
                # Criar IPA
                cd build
                cp -r "$APP_PATH" ./modamaskavo.app
                mkdir -p Payload
                cp -r modamaskavo.app Payload/
                zip -r modamaskavo.ipa Payload/
                
                if [ -f "modamaskavo.ipa" ]; then
                  IPA_SIZE=$(du -sh modamaskavo.ipa | cut -f1)
                  echo "‚úÖ IPA criado: $IPA_SIZE"
                  cp modamaskavo.ipa ../../modamaskavo-without-pods.ipa
                fi
              fi
            else
              echo "‚ùå Build falhou mesmo sem workspace!"
              tail -20 build-without-workspace.log
            fi
          else
            echo "‚úÖ Workspace existe, pulando build sem workspace"
          fi
          
      - name: Relat√≥rio final detalhado
        script: |
          echo "üìã RELAT√ìRIO FINAL DETALHADO"
          echo "============================"
          
          cd ios
          
          echo "üìä STATUS DOS ARQUIVOS:"
          echo "- Podfile: $([ -f "Podfile" ] && echo "‚úÖ" || echo "‚ùå")"
          echo "- Podfile.lock: $([ -f "Podfile.lock" ] && echo "‚úÖ" || echo "‚ùå")"
          echo "- Workspace: $([ -f "modamaskavo.xcworkspace/contents.xcworkspacedata" ] && echo "‚úÖ" || echo "‚ùå")"
          echo "- Pasta Pods: $([ -d "Pods" ] && echo "‚úÖ" || echo "‚ùå")"
          
          echo ""
          echo "üì± IPAs ENCONTRADOS:"
          find .. -name "*.ipa" -exec ls -lh {} \;
          
          echo ""
          echo "üìÑ LOGS DISPON√çVEIS:"
          ls -la *.log 2>/dev/null || echo "Nenhum log encontrado"
          
    artifacts:
      - ios/pod-install-*.log
      - ios/build-*.log
      - ios/Podfile.backup
      - ios/Podfile.lock
      - ios/build/*.ipa
      - ios/build/*.app
      - ios/build/*.xcarchive
      - "*.ipa"
