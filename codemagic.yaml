# codemagic.yaml - VERSÃO CORRIGIDA COM ARTIFACTS
workflows:
  ios-workflow:
    name: iOS Workflow
    instance_type: mac_mini_m1
    max_build_duration: 120
    environment:
      vars:
        XCODE_WORKSPACE: "modamaskavo.xcworkspace"
        XCODE_SCHEME: "modamaskavo"
      node: 18.17.0
      xcode: latest
      cocoapods: default
    scripts:
      - name: Install npm dependencies
        script: |
          npm ci
          
      - name: HACK BRUTAL - Criar React-jsc.podspec COM FABRIC
        script: |
          # Criar React-jsc.podspec com subspec Fabric
          mkdir -p node_modules/react-native/ReactCommon/jsc
          cat > node_modules/react-native/ReactCommon/jsc/React-jsc.podspec << 'EOF'
          Pod::Spec.new do |s|
            s.name                   = "React-jsc"
            s.version                = "1000.0.0"
            s.summary                = "React Native JavaScriptCore with Fabric support"
            s.homepage               = "https://reactnative.dev/"
            s.license                = "MIT"
            s.author                 = "Meta Platforms, Inc."
            s.platforms              = { :ios => "12.0" }
            s.source                 = { :path => "." }
            s.source_files           = "*.{h,m,mm,cpp,c}"
            s.header_dir             = "React"
            s.public_header_files    = "*.h"
            s.pod_target_xcconfig    = {
              'IPHONEOS_DEPLOYMENT_TARGET' => '12.0',
              'MACOSX_DEPLOYMENT_TARGET' => '10.15'
            }
            
            # Subspec Fabric - CRÍTICO
            s.subspec "Fabric" do |ss|
              ss.source_files = "*.{h,m,mm,cpp,c}"
              ss.header_dir = "React"
              ss.public_header_files = "*.h"
              ss.pod_target_xcconfig = {
                'IPHONEOS_DEPLOYMENT_TARGET' => '12.0',
                'MACOSX_DEPLOYMENT_TARGET' => '10.15'
              }
            end
            
            # Subspec Default
            s.subspec "Default" do |ss|
              ss.source_files = "*.{h,m,mm,cpp,c}"
              ss.header_dir = "React"
              ss.public_header_files = "*.h"
              ss.pod_target_xcconfig = {
                'IPHONEOS_DEPLOYMENT_TARGET' => '12.0',
                'MACOSX_DEPLOYMENT_TARGET' => '10.15'
              }
            end
          end
          EOF
          
          # Criar arquivos dummy para React-jsc
          touch node_modules/react-native/ReactCommon/jsc/dummy.cpp
          touch node_modules/react-native/ReactCommon/jsc/dummy.h
          
          echo "✅ React-jsc.podspec com Fabric criado!"
          
      - name: HACK BRUTAL - Corrigir fast_float.podspec
        script: |
          # Corrigir fast_float.podspec para usar iOS 12.0
          mkdir -p node_modules/react-native/third-party-podspecs
          cat > node_modules/react-native/third-party-podspecs/fast_float.podspec << 'EOF'
          Pod::Spec.new do |s|
            s.name                   = "fast_float"
            s.version                = "3.4.0"
            s.summary                = "Fast and exact implementation of the C++ from_chars functions for float and double types"
            s.homepage               = "https://github.com/fastfloat/fast_float"
            s.license                = { :type => "MIT", :file => "LICENSE" }
            s.author                 = { "Daniel Lemire" => "lemire@gmail.com" }
            s.platforms              = { :ios => "12.0", :osx => "10.15" }
            s.source                 = { :git => "https://github.com/fastfloat/fast_float.git", :tag => "v3.4.0" }
            s.source_files           = "include/**/*.h"
            s.header_dir             = "fast_float"
            s.public_header_files    = "include/**/*.h"
            s.header_mappings_dir    = "include"
            s.requires_arc           = false
            s.pod_target_xcconfig    = {
              'IPHONEOS_DEPLOYMENT_TARGET' => '12.0',
              'MACOSX_DEPLOYMENT_TARGET' => '10.15',
              'USE_HEADERMAP' => 'NO',
              'CLANG_CXX_LANGUAGE_STANDARD' => 'c++14',
              'CLANG_CXX_LIBRARY' => 'libc++'
            }
          end
          EOF
          
          echo "✅ fast_float.podspec corrigido para iOS 12.0!"
          
      - name: HACK BRUTAL - Corrigir TODOS os third-party-podspecs
        script: |
          # Criar diretório third-party-podspecs se não existir
          mkdir -p node_modules/react-native/third-party-podspecs
          
          # Corrigir boost.podspec
          cat > node_modules/react-native/third-party-podspecs/boost.podspec << 'EOF'
          Pod::Spec.new do |s|
            s.name                   = "boost"
            s.version                = "1.76.0"
            s.summary                = "Boost C++ Libraries"
            s.homepage               = "https://www.boost.org/"
            s.license                = { :type => "Boost Software License", :file => "LICENSE_1_0.txt" }
            s.author                 = { "Boost" => "boost@boost.org" }
            s.platforms              = { :ios => "12.0", :osx => "10.15" }
            s.source                 = { :http => "https://boostorg.jfrog.io/artifactory/main/release/1.76.0/source/boost_1_76_0.tar.bz2" }
            s.source_files           = "boost/**/*.{h,hpp}"
            s.header_dir             = "boost"
            s.public_header_files    = "boost/**/*.{h,hpp}"
            s.header_mappings_dir    = "."
            s.requires_arc           = false
            s.pod_target_xcconfig    = {
              'IPHONEOS_DEPLOYMENT_TARGET' => '12.0',
              'MACOSX_DEPLOYMENT_TARGET' => '10.15',
              'USE_HEADERMAP' => 'NO',
              'CLANG_CXX_LANGUAGE_STANDARD' => 'c++14',
              'CLANG_CXX_LIBRARY' => 'libc++'
            }
          end
          EOF
          
          # Corrigir glog.podspec
          cat > node_modules/react-native/third-party-podspecs/glog.podspec << 'EOF'
          Pod::Spec.new do |s|
            s.name                   = "glog"
            s.version                = "0.3.5"
            s.summary                = "Google logging library"
            s.homepage               = "https://github.com/google/glog"
            s.license                = { :type => "BSD", :file => "COPYING" }
            s.author                 = { "Google" => "google-glog@googlegroups.com" }
            s.platforms              = { :ios => "12.0", :osx => "10.15" }
            s.source                 = { :git => "https://github.com/google/glog.git", :tag => "v0.3.5" }
            s.source_files           = "src/**/*.{h,cc}"
            s.header_dir             = "glog"
            s.public_header_files    = "src/glog/*.h"
            s.header_mappings_dir    = "src"
            s.requires_arc           = false
            s.pod_target_xcconfig    = {
              'IPHONEOS_DEPLOYMENT_TARGET' => '12.0',
              'MACOSX_DEPLOYMENT_TARGET' => '10.15',
              'USE_HEADERMAP' => 'NO',
              'CLANG_CXX_LANGUAGE_STANDARD' => 'c++14',
              'CLANG_CXX_LIBRARY' => 'libc++'
            }
          end
          EOF
          
          # Corrigir folly.podspec
          cat > node_modules/react-native/third-party-podspecs/folly.podspec << 'EOF'
          Pod::Spec.new do |s|
            s.name                   = "folly"
            s.version                = "2021.07.22.00"
            s.summary                = "Facebook's C++ library"
            s.homepage               = "https://github.com/facebook/folly"
            s.license                = { :type => "Apache License, Version 2.0", :file => "LICENSE" }
            s.author                 = { "Facebook" => "folly@fb.com" }
            s.platforms              = { :ios => "12.0", :osx => "10.15" }
            s.source                 = { :git => "https://github.com/facebook/folly.git", :tag => "v2021.07.22.00" }
            s.source_files           = "folly/**/*.{h,cpp}"
            s.header_dir             = "folly"
            s.public_header_files    = "folly/**/*.h"
            s.header_mappings_dir    = "."
            s.requires_arc           = false
            s.pod_target_xcconfig    = {
              'IPHONEOS_DEPLOYMENT_TARGET' => '12.0',
              'MACOSX_DEPLOYMENT_TARGET' => '10.15',
              'USE_HEADERMAP' => 'NO',
              'CLANG_CXX_LANGUAGE_STANDARD' => 'c++14',
              'CLANG_CXX_LIBRARY' => 'libc++'
            }
          end
          EOF
          
          # Corrigir fmt.podspec
          cat > node_modules/react-native/third-party-podspecs/fmt.podspec << 'EOF'
          Pod::Spec.new do |s|
            s.name                   = "fmt"
            s.version                = "6.2.1"
            s.summary                = "A modern formatting library"
            s.homepage               = "https://github.com/fmtlib/fmt"
            s.license                = { :type => "MIT", :file => "LICENSE.rst" }
            s.author                 = { "Victor Zverovich" => "victor.zverovich@gmail.com" }
            s.platforms              = { :ios => "12.0", :osx => "10.15" }
            s.source                 = { :git => "https://github.com/fmtlib/fmt.git", :tag => "6.2.1" }
            s.source_files           = "include/**/*.h", "src/*.cc"
            s.header_dir             = "fmt"
            s.public_header_files    = "include/**/*.h"
            s.header_mappings_dir    = "include"
            s.requires_arc           = false
            s.pod_target_xcconfig    = {
              'IPHONEOS_DEPLOYMENT_TARGET' => '12.0',
              'MACOSX_DEPLOYMENT_TARGET' => '10.15',
              'USE_HEADERMAP' => 'NO',
              'CLANG_CXX_LANGUAGE_STANDARD' => 'c++14',
              'CLANG_CXX_LIBRARY' => 'libc++'
            }
          end
          EOF
          
          echo "✅ Todos os third-party-podspecs corrigidos para iOS 12.0!"
          
      - name: HACK BRUTAL - Criar React-Core.podspec COM SUBSPECS CORRETOS
        script: |
          # Criar React-Core.podspec com TODOS os subspecs necessários
          mkdir -p node_modules/react-native
          cat > node_modules/react-native/React-Core.podspec << 'EOF'
          Pod::Spec.new do |s|
            s.name                   = "React-Core"
            s.version                = "1000.0.0"
            s.summary                = "React Native Core library with all subspecs"
            s.homepage               = "https://reactnative.dev/"
            s.license                = "MIT"
            s.author                 = "Meta Platforms, Inc."
            s.platforms              = { :ios => "12.0" }
            s.source                 = { :path => "." }
            s.source_files           = "*.{h,m,mm,cpp,c}"
            s.header_dir             = "React"
            s.public_header_files    = "*.h"
            s.pod_target_xcconfig    = {
              'IPHONEOS_DEPLOYMENT_TARGET' => '12.0',
              'MACOSX_DEPLOYMENT_TARGET' => '10.15'
            }
            
            # Subspec RCTWebSocket - CRÍTICO
            s.subspec "RCTWebSocket" do |ss|
              ss.source_files = "*.{h,m,mm,cpp,c}"
              ss.header_dir = "React"
              ss.public_header_files = "*.h"
              ss.pod_target_xcconfig = {
                'IPHONEOS_DEPLOYMENT_TARGET' => '12.0',
                'MACOSX_DEPLOYMENT_TARGET' => '10.15'
              }
            end
            
            s.subspec "RCTAnimation" do |ss|
              ss.source_files = "*.{h,m,mm,cpp,c}"
              ss.header_dir = "React"
              ss.public_header_files = "*.h"
              ss.pod_target_xcconfig = {
                'IPHONEOS_DEPLOYMENT_TARGET' => '12.0',
                'MACOSX_DEPLOYMENT_TARGET' => '10.15'
              }
            end
            
            s.subspec "RCTBlob" do |ss|
              ss.source_files = "*.{h,m,mm,cpp,c}"
              ss.header_dir = "React"
              ss.public_header_files = "*.h"
              ss.pod_target_xcconfig = {
                'IPHONEOS_DEPLOYMENT_TARGET' => '12.0',
                'MACOSX_DEPLOYMENT_TARGET' => '10.15'
              }
            end
            
            s.subspec "RCTImage" do |ss|
              ss.source_files = "*.{h,m,mm,cpp,c}"
              ss.header_dir = "React"
              ss.public_header_files = "*.h"
              ss.pod_target_xcconfig = {
                'IPHONEOS_DEPLOYMENT_TARGET' => '12.0',
                'MACOSX_DEPLOYMENT_TARGET' => '10.15'
              }
            end
            
            s.subspec "RCTLinking" do |ss|
              ss.source_files = "*.{h,m,mm,cpp,c}"
              ss.header_dir = "React"
              ss.public_header_files = "*.h"
              ss.pod_target_xcconfig = {
                'IPHONEOS_DEPLOYMENT_TARGET' => '12.0',
                'MACOSX_DEPLOYMENT_TARGET' => '10.15'
              }
            end
            
            s.subspec "RCTNetwork" do |ss|
              ss.source_files = "*.{h,m,mm,cpp,c}"
              ss.header_dir = "React"
              ss.public_header_files = "*.h"
              ss.pod_target_xcconfig = {
                'IPHONEOS_DEPLOYMENT_TARGET' => '12.0',
                'MACOSX_DEPLOYMENT_TARGET' => '10.15'
              }
            end
            
            s.subspec "RCTSettings" do |ss|
              ss.source_files = "*.{h,m,mm,cpp,c}"
              ss.header_dir = "React"
              ss.public_header_files = "*.h"
              ss.pod_target_xcconfig = {
                'IPHONEOS_DEPLOYMENT_TARGET' => '12.0',
                'MACOSX_DEPLOYMENT_TARGET' => '10.15'
              }
            end
            
            s.subspec "RCTText" do |ss|
              ss.source_files = "*.{h,m,mm,cpp,c}"
              ss.header_dir = "React"
              ss.public_header_files = "*.h"
              ss.pod_target_xcconfig = {
                'IPHONEOS_DEPLOYMENT_TARGET' => '12.0',
                'MACOSX_DEPLOYMENT_TARGET' => '10.15'
              }
            end
            
            s.subspec "RCTVibration" do |ss|
              ss.source_files = "*.{h,m,mm,cpp,c}"
              ss.header_dir = "React"
              ss.public_header_files = "*.h"
              ss.pod_target_xcconfig = {
                'IPHONEOS_DEPLOYMENT_TARGET' => '12.0',
                'MACOSX_DEPLOYMENT_TARGET' => '10.15'
              }
            end
            
            s.subspec "Default" do |ss|
              ss.source_files = "*.{h,m,mm,cpp,c}"
              ss.header_dir = "React"
              ss.public_header_files = "*.h"
              ss.pod_target_xcconfig = {
                'IPHONEOS_DEPLOYMENT_TARGET' => '12.0',
                'MACOSX_DEPLOYMENT_TARGET' => '10.15'
              }
            end
          end
          EOF
          
          # Criar arquivos dummy para React-Core
          touch node_modules/react-native/dummy.cpp
          touch node_modules/react-native/dummy.h
          
          echo "✅ React-Core.podspec criado!"
          
      - name: HACK BRUTAL - Criar ReactCommon.podspec COM SUBSPECS CORRETOS
        script: |
          # Criar ReactCommon.podspec com TODOS os subspecs necessários
          mkdir -p node_modules/react-native/ReactCommon
          cat > node_modules/react-native/ReactCommon/ReactCommon.podspec << 'EOF'
          Pod::Spec.new do |s|
            s.name                   = "ReactCommon"
            s.version                = "1000.0.0"
            s.summary                = "ReactCommon with all turbomodule subspecs"
            s.homepage               = "https://reactnative.dev/"
            s.license                = "MIT"
            s.author                 = "Meta Platforms, Inc."
            s.platforms              = { :ios => "12.0" }
            s.source                 = { :path => "." }
            s.source_files           = "*.{h,m,mm,cpp,c}"
            s.header_dir             = "ReactCommon"
            s.public_header_files    = "*.h"
            s.pod_target_xcconfig    = {
              'IPHONEOS_DEPLOYMENT_TARGET' => '12.0',
              'MACOSX_DEPLOYMENT_TARGET' => '10.15'
            }
            
            # Subspec turbomodule - OBRIGATÓRIO
            s.subspec "turbomodule" do |ss|
              ss.source_files = "*.{h,m,mm,cpp,c}"
              ss.header_dir = "ReactCommon"
              ss.public_header_files = "*.h"
              ss.pod_target_xcconfig = {
                'IPHONEOS_DEPLOYMENT_TARGET' => '12.0',
                'MACOSX_DEPLOYMENT_TARGET' => '10.15'
              }
              
              # Subspec turbomodule/core - OBRIGATÓRIO E CRÍTICO
              ss.subspec "core" do |sss|
                sss.source_files = "*.{h,m,mm,cpp,c}"
                sss.header_dir = "ReactCommon"
                sss.public_header_files = "*.h"
                sss.pod_target_xcconfig = {
                  'IPHONEOS_DEPLOYMENT_TARGET' => '12.0',
                  'MACOSX_DEPLOYMENT_TARGET' => '10.15'
                }
              end
              
              # Outros subspecs do turbomodule
              ss.subspec "samples" do |sss|
                sss.source_files = "*.{h,m,mm,cpp,c}"
                sss.header_dir = "ReactCommon"
                sss.public_header_files = "*.h"
                sss.pod_target_xcconfig = {
                  'IPHONEOS_DEPLOYMENT_TARGET' => '12.0',
                  'MACOSX_DEPLOYMENT_TARGET' => '10.15'
                }
              end
            end
            
            # Outros subspecs importantes
            s.subspec "jsi" do |ss|
              ss.source_files = "*.{h,m,mm,cpp,c}"
              ss.header_dir = "ReactCommon"
              ss.public_header_files = "*.h"
              ss.pod_target_xcconfig = {
                'IPHONEOS_DEPLOYMENT_TARGET' => '12.0',
                'MACOSX_DEPLOYMENT_TARGET' => '10.15'
              }
            end
            
            s.subspec "callinvoker" do |ss|
              ss.source_files = "*.{h,m,mm,cpp,c}"
              ss.header_dir = "ReactCommon"
              ss.public_header_files = "*.h"
              ss.pod_target_xcconfig = {
                'IPHONEOS_DEPLOYMENT_TARGET' => '12.0',
                'MACOSX_DEPLOYMENT_TARGET' => '10.15'
              }
            end
            
            s.subspec "runtimeexecutor" do |ss|
              ss.source_files = "*.{h,m,mm,cpp,c}"
              ss.header_dir = "ReactCommon"
              ss.public_header_files = "*.h"
              ss.pod_target_xcconfig = {
                'IPHONEOS_DEPLOYMENT_TARGET' => '12.0',
                'MACOSX_DEPLOYMENT_TARGET' => '10.15'
              }
            end
            
            s.subspec "react" do |ss|
              ss.source_files = "*.{h,m,mm,cpp,c}"
              ss.header_dir = "ReactCommon"
              ss.public_header_files = "*.h"
              ss.pod_target_xcconfig = {
                'IPHONEOS_DEPLOYMENT_TARGET' => '12.0',
                'MACOSX_DEPLOYMENT_TARGET' => '10.15'
              }
            end
            
            s.subspec "Default" do |ss|
              ss.source_files = "*.{h,m,mm,cpp,c}"
              ss.header_dir = "ReactCommon"
              ss.public_header_files = "*.h"
              ss.pod_target_xcconfig = {
                'IPHONEOS_DEPLOYMENT_TARGET' => '12.0',
                'MACOSX_DEPLOYMENT_TARGET' => '10.15'
              }
            end
          end
          EOF
          
          # Criar arquivos dummy para ReactCommon
          touch node_modules/react-native/ReactCommon/dummy.cpp
          touch node_modules/react-native/ReactCommon/dummy.h
          
          echo "✅ ReactCommon.podspec criado!"
          
      - name: HACK BRUTAL - Criar TODOS os podspecs restantes
        script: |
          # Script Ruby para criar todos os outros podspecs
          cat > fix_podspecs.rb << 'EOF'
          require 'fileutils'

          def create_podspec(name, path)
            FileUtils.mkdir_p(path)
            File.write("#{path}/#{name}.podspec", <<~PODSPEC)
              Pod::Spec.new do |s|
                s.name                   = "#{name}"
                s.version                = "1000.0.0"
                s.summary                = "Auto-generated podspec for compatibility"
                s.homepage               = "https://reactnative.dev/"
                s.license                = "MIT"
                s.author                 = "Meta Platforms, Inc."
                s.platforms              = { :ios => "12.0" }
                s.source                 = { :path => "." }
                s.source_files           = "*.{h,m,mm,cpp,c}"
                s.header_dir             = "React"
                s.public_header_files    = "*.h"
                s.pod_target_xcconfig    = {
                  'IPHONEOS_DEPLOYMENT_TARGET' => '12.0',
                  'MACOSX_DEPLOYMENT_TARGET' => '10.15'
                }
              end
            PODSPEC
            FileUtils.touch("#{path}/dummy.cpp")
            FileUtils.touch("#{path}/dummy.h")
            puts "✅ Created #{name}.podspec with iOS 12.0 forced"
          end

          # Lista COMPLETA de podspecs necessários
          podspecs = [
            ["React", "node_modules/react-native"],
            ["React-RCTFBReactNativeSpec", "node_modules/react-native/React"],
            ["React-featureflags", "node_modules/react-native/ReactCommon/react/featureflags"],
            ["React-featureflagsnativemodule", "node_modules/react-native/ReactCommon/react/nativemodule/featureflags"],
            ["React-idlecallbacksnativemodule", "node_modules/react-native/ReactCommon/react/nativemodule/idlecallbacks"],
            ["React-jsitooling", "node_modules/react-native/ReactCommon/jsitooling"],
            ["React-jsinspectortracing", "node_modules/react-native/ReactCommon/jsinspector-modern/tracing"],
            ["RCTRequired", "node_modules/react-native/Libraries/Required"],
            ["React-RuntimeApple", "node_modules/react-native/ReactCommon/react/runtime/platform/ios"],
            ["React-RuntimeCore", "node_modules/react-native/ReactCommon/react/runtime"],
            ["React-logger", "node_modules/react-native/ReactCommon/logger"],
            ["React-oscompat", "node_modules/react-native/ReactCommon/oscompat"],
            ["React-NativeModulesApple", "node_modules/react-native/ReactCommon/react/nativemodule/core/platform/ios"],
            ["React-RCTNetwork", "node_modules/react-native/Libraries/Network"],
            ["FBLazyVector", "node_modules/react-native/Libraries/FBLazyVector"],
            ["React-CoreModules", "node_modules/react-native/React/CoreModules"],
            ["React-RCTAppDelegate", "node_modules/react-native/Libraries/AppDelegate"],
            ["React-RCTImage", "node_modules/react-native/Libraries/Image"],
            ["React-RCTText", "node_modules/react-native/Libraries/Text"],
            ["React-RCTVibration", "node_modules/react-native/Libraries/Vibration"],
            ["React-RCTLinking", "node_modules/react-native/Libraries/LinkingIOS"],
            ["React-RCTSettings", "node_modules/react-native/Libraries/Settings"],
            ["React-RCTBlob", "node_modules/react-native/Libraries/Blob"],
            ["React-RCTAnimation", "node_modules/react-native/Libraries/NativeAnimation"],
            ["React-jsi", "node_modules/react-native/ReactCommon/jsi"],
            ["React-jsiexecutor", "node_modules/react-native/ReactCommon/jsiexecutor"],
            ["React-callinvoker", "node_modules/react-native/ReactCommon/callinvoker"],
            ["React-runtimeexecutor", "node_modules/react-native/ReactCommon/runtimeexecutor"],
            ["React-perflogger", "node_modules/react-native/ReactCommon/reactperflogger"],
            ["React-cxxreact", "node_modules/react-native/ReactCommon/cxxreact"],
            ["React-hermes", "node_modules/react-native/ReactCommon/hermes"],
            ["React-utils", "node_modules/react-native/ReactCommon/react/utils"],
            ["React-debug", "node_modules/react-native/ReactCommon/react/debug"],
            ["React-Mapbuffer", "node_modules/react-native/ReactCommon/react/renderer/mapbuffer"],
            ["Yoga", "node_modules/react-native/ReactCommon/yoga"],
            ["RCTTypeSafety", "node_modules/react-native/Libraries/TypeSafety"],
            ["React-RCTActionSheet", "node_modules/react-native/Libraries/ActionSheetIOS"],
            ["React-RCTAlert", "node_modules/react-native/Libraries/Alert"],
            ["React-RCTPushNotification", "node_modules/react-native/Libraries/PushNotificationIOS"],
            ["React-jsinspector", "node_modules/react-native/ReactCommon/jsinspector-modern"]
          ]

          podspecs.each do |name, path|
            create_podspec(name, path)
          end

          puts "✅ Todos os podspecs criados com iOS 12.0 forçado!"
          EOF
          
          # Executar o script Ruby
          ruby fix_podspecs.rb
          
      - name: Create Podfile with iOS 12.0 ULTRA FORÇADO
        script: |
          cat > ios/Podfile << 'EOF'
          require_relative '../node_modules/react-native/scripts/react_native_pods'
          
          platform :ios, '12.0'
          
          # Forçar iOS 12.0 em TODOS os pods
          def force_ios_12(installer)
            installer.pods_project.targets.each do |target|
              target.build_configurations.each do |config|
                config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '12.0'
                config.build_settings['MACOSX_DEPLOYMENT_TARGET'] = '10.15'
                config.build_settings['RCT_NEW_ARCH_ENABLED'] = 'NO'
                config.build_settings['ENABLE_BITCODE'] = 'NO'
                config.build_settings['CODE_SIGNING_REQUIRED'] = 'NO'
                config.build_settings['CODE_SIGNING_ALLOWED'] = 'NO'
              end
            end
          end
          
          target 'modamaskavo' do
            config = use_native_modules!
            
            use_react_native!(
              :path => config[:reactNativePath],
              :hermes_enabled => false,
              :fabric_enabled => false,
              :new_arch_enabled => false
            )
            
                        post_install do |installer|
              react_native_post_install(installer)
              force_ios_12(installer)
              
              # Forçar iOS 12.0 em TODOS os pods
              installer.pods_project.targets.each do |target|
                target.build_configurations.each do |config|
                  config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '12.0'
                  config.build_settings['MACOSX_DEPLOYMENT_TARGET'] = '10.15'
                  config.build_settings['RCT_NEW_ARCH_ENABLED'] = 'NO'
                  config.build_settings['ENABLE_BITCODE'] = 'NO'
                  config.build_settings['CODE_SIGNING_REQUIRED'] = 'NO'
                  config.build_settings['CODE_SIGNING_ALLOWED'] = 'NO'
                  config.build_settings['EXCLUDED_ARCHS[sdk=iphonesimulator*]'] = 'arm64'
                end
              end
            end
          end
          EOF
          
          echo "✅ Podfile criado com iOS 12.0 ULTRA FORÇADO!"
          
      - name: Install CocoaPods dependencies
        script: |
          cd ios
          pod install --repo-update --verbose
          
      - name: Skip CocoaPods (usando build direto)
        script: |
          cd ios
          echo "⚠️ Pulando CocoaPods - usando build direto do projeto"
          
          # Verificar se workspace existe
          if [ -f "modamaskavo.xcworkspace" ]; then
            echo "✅ Workspace encontrado!"
          else
            echo "❌ Workspace não encontrado. Listando arquivos .xcworkspace:"
            find . -name "*.xcworkspace" -type d
          fi
          
          # Verificar se projeto existe
          if [ -f "modamaskavo.xcodeproj" ]; then
            echo "✅ Projeto encontrado!"
          else
            echo "❌ Projeto não encontrado. Listando arquivos .xcodeproj:"
            find . -name "*.xcodeproj" -type d
          fi
          
      - name: Criar exportOptions.plist
        script: |
          cd ios
          cat > exportOptions.plist << 'EOF'
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
              <key>method</key>
              <string>development</string>
              <key>compileBitcode</key>
              <false/>
              <key>uploadBitcode</key>
              <false/>
              <key>uploadSymbols</key>
              <false/>
              <key>signingStyle</key>
              <string>automatic</string>
              <key>stripSwiftSymbols</key>
              <true/>
              <key>thinning</key>
              <string>&lt;none&gt;</string>
          </dict>
          </plist>
          EOF
          
          echo "✅ exportOptions.plist criado!"
          
      - name: Build and Archive iOS app (sem CocoaPods)
        script: |
          cd ios
          
          # Criar diretório de build
          mkdir -p build
          
          echo "=== Iniciando build do iOS (sem CocoaPods) ==="
          
          # Build e Archive usando PROJECT ao invés de WORKSPACE
          xcodebuild -project modamaskavo.xcodeproj \
                     -scheme "$XCODE_SCHEME" \
                     -configuration Release \
                     -destination generic/platform=iOS \
                     -archivePath build/modamaskavo.xcarchive \
                     archive
          
          echo "=== Archive concluído, iniciando export ==="
          
          # Exportar IPA
          xcodebuild -exportArchive \
                     -archivePath build/modamaskavo.xcarchive \
                     -exportPath build \
                     -exportOptionsPlist exportOptions.plist
          
          echo "=== Export concluído ==="
          
          # Listar arquivos gerados
          echo "=== Arquivos gerados ==="
          find build -name "*.ipa" -o -name "*.app" -o -name "*.xcarchive" | head -10
          
          # Verificar se IPA foi criado
          if find build -name "*.ipa" | grep -q .; then
            echo "✅ IPA criado com sucesso!"
            find build -name "*.ipa" -exec ls -la {} \;
          else
            echo "❌ IPA não foi criado"
            echo "Conteúdo do diretório build:"
            ls -la build/
          fi
          
    # SEÇÃO DE ARTEFATOS - CRÍTICA PARA DOWNLOAD
    artifacts:
      # Arquivo IPA principal (mais importante)
      - ios/build/*.ipa
      - ios/build/**/*.ipa
      
      # Archive do Xcode
      - ios/build/*.xcarchive
      - ios/build/**/*.xcarchive
      
      # App bundle
      - ios/build/*.app
      - ios/build/**/*.app
      
      # Símbolos de debug
      - ios/build/**/*.dSYM
      - ios/build/**/*.dSYM.zip
      
      # Logs importantes
      - ios/build/logs/**
      - "**/*.log"
      - "**/*.crash"
      
      # Relatórios de build
      - ios/build/reports/**
      - ios/DerivedData/*/Logs/**
      
      # Arquivos de configuração
      - ios/exportOptions.plist
      - ios/Podfile
      - ios/Podfile.lock
    
