workflows:
  ios-workflow:
    name: iOS Build Sem Depend√™ncias
    instance_type: mac_mini_m1
    environment:
      node: 18
      xcode: latest
    scripts:
      - name: Install npm dependencies only
        script: |
          npm install --production
          
      - name: Skip CocoaPods - Use pre-built workspace
        script: |
          echo "Pulando CocoaPods, usando workspace existente..."
          cd ios
          
          # Verificar se workspace existe
          if [ -d "modamaskavo.xcworkspace" ]; then
            echo "‚úÖ Workspace encontrado!"
          else
            echo "‚ùå Workspace n√£o existe, criando minimal..."
            # Criar workspace m√≠nimo
            mkdir -p modamaskavo.xcworkspace
            cat > modamaskavo.xcworkspace/contents.xcworkspacedata << 'EOF'
          <?xml version="1.0" encoding="UTF-8"?>
          <Workspace version="1.0">
             <FileRef location="group:modamaskavo.xcodeproj">
             </FileRef>
          </Workspace>
          EOF
          fi
          
      - name: Build iOS app DIRETO
        script: |
          cd ios
          
          # Criar pasta build se n√£o existir
          mkdir -p build
          
          # Verificar se o projeto existe
          if [ ! -f "modamaskavo.xcodeproj/project.pbxproj" ]; then
            echo "‚ùå Projeto Xcode n√£o encontrado!"
            exit 1
          fi
          
          echo "üî® Iniciando build do archive..."
          
          # Tentar build direto do projeto
          xcodebuild -project modamaskavo.xcodeproj \
                     -scheme modamaskavo \
                     -configuration Release \
                     -destination generic/platform=iOS \
                     -archivePath build/modamaskavo.xcarchive \
                     archive \
                     CODE_SIGNING_REQUIRED=NO \
                     CODE_SIGNING_ALLOWED=NO
          
          # Verificar se o comando foi bem-sucedido
          if [ $? -eq 0 ]; then
            echo "‚úÖ Build conclu√≠do com sucesso!"
          else
            echo "‚ùå Build falhou!"
            exit 1
          fi
          
      - name: Verificar archive criado
        script: |
          cd ios
          
          echo "üîç Verificando se archive foi criado..."
          
          # Listar conte√∫do da pasta build
          echo "üìÅ Conte√∫do da pasta build:"
          ls -la build/
          
          # Verificar especificamente o archive
          if [ -d "build/modamaskavo.xcarchive" ]; then
            echo "‚úÖ Archive encontrado!"
            echo "üìä Tamanho: $(du -sh build/modamaskavo.xcarchive)"
            echo "üìÅ Conte√∫do do archive:"
            ls -la build/modamaskavo.xcarchive/
            
            # Verificar se o .app existe dentro do archive
            if [ -d "build/modamaskavo.xcarchive/Products/Applications/modamaskavo.app" ]; then
              echo "‚úÖ App encontrado dentro do archive!"
            else
              echo "‚ùå App n√£o encontrado no archive!"
              echo "üìÅ Conte√∫do de Products:"
              ls -la build/modamaskavo.xcarchive/Products/ 2>/dev/null || echo "Pasta Products n√£o existe"
            fi
          else
            echo "‚ùå Archive n√£o foi criado!"
            echo "üìÅ Arquivos dispon√≠veis em build/:"
            find build/ -type f -name "*" 2>/dev/null || echo "Nenhum arquivo encontrado"
            exit 1
          fi
          
      - name: Create IPA manually
        script: |
          cd ios/build
          
          # Verificar novamente se archive existe
          if [ ! -d "modamaskavo.xcarchive" ]; then
            echo "‚ùå Archive n√£o encontrado em $(pwd)!"
            echo "üìÅ Conte√∫do atual:"
            ls -la
            exit 1
          fi
          
          # Verificar se o .app existe no local correto
          APP_PATH="modamaskavo.xcarchive/Products/Applications/modamaskavo.app"
          if [ ! -d "$APP_PATH" ]; then
            echo "‚ùå App n√£o encontrado em $APP_PATH"
            echo "üìÅ Explorando estrutura do archive:"
            find modamaskavo.xcarchive/ -name "*.app" -type d 2>/dev/null || echo "Nenhum .app encontrado"
            
            # Tentar encontrar o .app em outros locais
            find modamaskavo.xcarchive/ -type d -name "*.app" | while read app_found; do
              echo "üì± App encontrado em: $app_found"
              APP_PATH="$app_found"
            done
            
            # Se ainda n√£o encontrou, sair
            if [ ! -d "$APP_PATH" ]; then
              exit 1
            fi
          fi
          
          # Extrair .app do archive
          echo "üì± Copiando app de: $APP_PATH"
          cp -r "$APP_PATH" ./
          
          # Criar Payload
          mkdir -p Payload
          cp -r modamaskavo.app Payload/
          
          # Criar IPA
          zip -r modamaskavo.ipa Payload/
          
          echo "‚úÖ IPA criado manualmente!"
          ls -la *.ipa
          
      - name: Verificar arquivos finais
        script: |
          echo "üîç Verificando arquivos finais..."
          
          cd ios/build
          
          # Verificar IPA
          if [ -f "modamaskavo.ipa" ]; then
            echo "‚úÖ IPA criado com sucesso!"
            echo "üìä Tamanho: $(du -h modamaskavo.ipa)"
            echo "üì± Tipo: $(file modamaskavo.ipa)"
          else
            echo "‚ùå IPA n√£o foi criado!"
          fi
          
          # Listar todos os arquivos
          echo "üìÅ Todos os arquivos na pasta build:"
          ls -la
          
          # Copiar para raiz para facilitar download
          if [ -f "modamaskavo.ipa" ]; then
            cp modamaskavo.ipa ../../modamaskavo-final.ipa
            echo "‚úÖ IPA copiado para raiz do projeto!"
          fi
          
    artifacts:
      - ios/build/*.ipa
      - ios/build/*.app
      - ios/build/*.xcarchive
      - modamaskavo-final.ipa
